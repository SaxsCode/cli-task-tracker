#!/usr/bin/php

<?php

// argc - argv

class CLITaskApp {

    public $command;

    public function run($argv) {

        $this->setCommand($argv[1]);

        switch ($this->command) {
            case 'add':
                $this->add($argv[2]);
                break;
            case 'update':
                $this->update((int) $argv[2], $argv[3]);
                break;
            case 'delete':
                $this->delete((int) $argv[2]);
                break;
            case 'mark-in-progress':
            case 'mark-done':
                $status = substr($this->command, strlen('mark-'));
                $this->update((int) $argv[2], $status, true);
                break;
            case 'list':
                $this->list($argv[2]);
                break;
            default:
                echo 'Unknown command: ' . $this->command;
        }
    }

    public function setCommand($command) {
        $this->command = $command;
    }

    public function createTask($id, $description, $status, $createdAt, $updatedAt)
    {
        return ['id' => $id, 'description' => $description, 'status' => $status, 'createdAt' => $createdAt, 'updatedAt' => $updatedAt];
    }

    public function add($description)
    {
        $tasks = file_get_contents('tasks.json');
        $tempTasks = json_decode($tasks, true);

        $id = 0;
        if (!empty($tempTasks)) {
            $id = max(array_column($tempTasks, 'id'));
            $id++;
        }

        $tempTasks[] = $this->createTask($id, $description, 'todo', date('Y-m-d H:i:s'), date('Y-m-d H:i:s'));
        file_put_contents('tasks.json', json_encode($tempTasks, JSON_PRETTY_PRINT));
    }

    public function update($id, $description, $status = false)
    {
        $tasks = file_get_contents('tasks.json');
        $tempTasks = json_decode($tasks, true);

        foreach ($tempTasks as &$task) {
            if ($task['id'] === $id) {

                if ($status) {
                    $task['status'] = $description;
                } else {
                    $task['description'] = $description;
                }
            }
        }
        unset($task);

        file_put_contents('tasks.json', json_encode($tempTasks, JSON_PRETTY_PRINT));
    }

    public function delete($id)
    {
        $tasks = file_get_contents('tasks.json');
        $tempTasks = json_decode($tasks, true);

        foreach ($tempTasks as $key => $task) {
            if ($task['id'] === $id) {
               unset($tempTasks[$key]);
            }
        }

        $tempTasks = array_values($tempTasks);
        file_put_contents('tasks.json', json_encode($tempTasks, JSON_PRETTY_PRINT));
    }

    public function list($status = null)
    {
        $tasks = file_get_contents('tasks.json');
        $tempTasks = json_decode($tasks, true);

        foreach ($tempTasks as $task) {
            if (!empty($status) && $status !== $task['status']) {
                continue;
            }
            echo $task['id'] . ' | ' . $task['status'] . ' | ' . $task['description'] . PHP_EOL;
        }
    }
}

$app = new CLITaskApp();
$app->run($argv);
